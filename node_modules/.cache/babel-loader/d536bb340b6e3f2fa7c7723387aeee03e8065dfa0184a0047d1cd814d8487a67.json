{"ast":null,"code":"\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { isPresetColor } from '../_util/colors';\nimport { ConfigContext } from '../config-provider';\nimport useStyle from './style/ribbon';\nconst Ribbon = props => {\n  const {\n    className,\n    prefixCls: customizePrefixCls,\n    style,\n    color,\n    children,\n    text,\n    placement = 'end',\n    rootClassName\n  } = props;\n  const {\n    getPrefixCls,\n    direction\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('ribbon', customizePrefixCls);\n  const [wrapCSSVar, hashId] = useStyle(prefixCls);\n  const colorInPreset = isPresetColor(color, false);\n  const ribbonCls = classNames(prefixCls, \"\".concat(prefixCls, \"-placement-\").concat(placement), {\n    [\"\".concat(prefixCls, \"-rtl\")]: direction === 'rtl',\n    [\"\".concat(prefixCls, \"-color-\").concat(color)]: colorInPreset\n  }, className);\n  const colorStyle = {};\n  const cornerColorStyle = {};\n  if (color && !colorInPreset) {\n    colorStyle.background = color;\n    cornerColorStyle.color = color;\n  }\n  return wrapCSSVar( /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(\"\".concat(prefixCls, \"-wrapper\"), rootClassName, hashId)\n  }, children, /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(ribbonCls, hashId),\n    style: Object.assign(Object.assign({}, colorStyle), style)\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-text\")\n  }, text), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-corner\"),\n    style: cornerColorStyle\n  }))));\n};\nif (process.env.NODE_ENV !== 'production') {\n  Ribbon.displayName = 'Ribbon';\n}\nexport default Ribbon;","map":{"version":3,"names":["React","classNames","isPresetColor","ConfigContext","useStyle","Ribbon","props","className","prefixCls","customizePrefixCls","style","color","children","text","placement","rootClassName","getPrefixCls","direction","useContext","wrapCSSVar","hashId","colorInPreset","ribbonCls","concat","colorStyle","cornerColorStyle","background","createElement","Object","assign","process","env","NODE_ENV","displayName"],"sources":["/Users/ojr/react-moviesearch-app_2024/node_modules/antd/es/badge/Ribbon.js"],"sourcesContent":["\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { isPresetColor } from '../_util/colors';\nimport { ConfigContext } from '../config-provider';\nimport useStyle from './style/ribbon';\nconst Ribbon = props => {\n  const {\n    className,\n    prefixCls: customizePrefixCls,\n    style,\n    color,\n    children,\n    text,\n    placement = 'end',\n    rootClassName\n  } = props;\n  const {\n    getPrefixCls,\n    direction\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('ribbon', customizePrefixCls);\n  const [wrapCSSVar, hashId] = useStyle(prefixCls);\n  const colorInPreset = isPresetColor(color, false);\n  const ribbonCls = classNames(prefixCls, `${prefixCls}-placement-${placement}`, {\n    [`${prefixCls}-rtl`]: direction === 'rtl',\n    [`${prefixCls}-color-${color}`]: colorInPreset\n  }, className);\n  const colorStyle = {};\n  const cornerColorStyle = {};\n  if (color && !colorInPreset) {\n    colorStyle.background = color;\n    cornerColorStyle.color = color;\n  }\n  return wrapCSSVar( /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(`${prefixCls}-wrapper`, rootClassName, hashId)\n  }, children, /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(ribbonCls, hashId),\n    style: Object.assign(Object.assign({}, colorStyle), style)\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: `${prefixCls}-text`\n  }, text), /*#__PURE__*/React.createElement(\"div\", {\n    className: `${prefixCls}-corner`,\n    style: cornerColorStyle\n  }))));\n};\nif (process.env.NODE_ENV !== 'production') {\n  Ribbon.displayName = 'Ribbon';\n}\nexport default Ribbon;"],"mappings":"AAAA,YAAY;;AAEZ,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,UAAU,MAAM,YAAY;AACnC,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,SAASC,aAAa,QAAQ,oBAAoB;AAClD,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,MAAMC,MAAM,GAAGC,KAAK,IAAI;EACtB,MAAM;IACJC,SAAS;IACTC,SAAS,EAAEC,kBAAkB;IAC7BC,KAAK;IACLC,KAAK;IACLC,QAAQ;IACRC,IAAI;IACJC,SAAS,GAAG,KAAK;IACjBC;EACF,CAAC,GAAGT,KAAK;EACT,MAAM;IACJU,YAAY;IACZC;EACF,CAAC,GAAGjB,KAAK,CAACkB,UAAU,CAACf,aAAa,CAAC;EACnC,MAAMK,SAAS,GAAGQ,YAAY,CAAC,QAAQ,EAAEP,kBAAkB,CAAC;EAC5D,MAAM,CAACU,UAAU,EAAEC,MAAM,CAAC,GAAGhB,QAAQ,CAACI,SAAS,CAAC;EAChD,MAAMa,aAAa,GAAGnB,aAAa,CAACS,KAAK,EAAE,KAAK,CAAC;EACjD,MAAMW,SAAS,GAAGrB,UAAU,CAACO,SAAS,KAAAe,MAAA,CAAKf,SAAS,iBAAAe,MAAA,CAAcT,SAAS,GAAI;IAC7E,IAAAS,MAAA,CAAIf,SAAS,YAASS,SAAS,KAAK,KAAK;IACzC,IAAAM,MAAA,CAAIf,SAAS,aAAAe,MAAA,CAAUZ,KAAK,IAAKU;EACnC,CAAC,EAAEd,SAAS,CAAC;EACb,MAAMiB,UAAU,GAAG,CAAC,CAAC;EACrB,MAAMC,gBAAgB,GAAG,CAAC,CAAC;EAC3B,IAAId,KAAK,IAAI,CAACU,aAAa,EAAE;IAC3BG,UAAU,CAACE,UAAU,GAAGf,KAAK;IAC7Bc,gBAAgB,CAACd,KAAK,GAAGA,KAAK;EAChC;EACA,OAAOQ,UAAU,EAAE,aAAanB,KAAK,CAAC2B,aAAa,CAAC,KAAK,EAAE;IACzDpB,SAAS,EAAEN,UAAU,IAAAsB,MAAA,CAAIf,SAAS,eAAYO,aAAa,EAAEK,MAAM;EACrE,CAAC,EAAER,QAAQ,EAAE,aAAaZ,KAAK,CAAC2B,aAAa,CAAC,KAAK,EAAE;IACnDpB,SAAS,EAAEN,UAAU,CAACqB,SAAS,EAAEF,MAAM,CAAC;IACxCV,KAAK,EAAEkB,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEL,UAAU,CAAC,EAAEd,KAAK;EAC3D,CAAC,EAAE,aAAaV,KAAK,CAAC2B,aAAa,CAAC,MAAM,EAAE;IAC1CpB,SAAS,KAAAgB,MAAA,CAAKf,SAAS;EACzB,CAAC,EAAEK,IAAI,CAAC,EAAE,aAAab,KAAK,CAAC2B,aAAa,CAAC,KAAK,EAAE;IAChDpB,SAAS,KAAAgB,MAAA,CAAKf,SAAS,YAAS;IAChCE,KAAK,EAAEe;EACT,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC;AACD,IAAIK,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;EACzC3B,MAAM,CAAC4B,WAAW,GAAG,QAAQ;AAC/B;AACA,eAAe5B,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}